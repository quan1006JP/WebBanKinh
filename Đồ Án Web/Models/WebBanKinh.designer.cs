#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Đồ_Án_Web.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WebBanKinh1")]
	public partial class WebBanKinhDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertTTKhachHang(TTKhachHang instance);
    partial void UpdateTTKhachHang(TTKhachHang instance);
    partial void DeleteTTKhachHang(TTKhachHang instance);
    partial void InsertCTDonHang(CTDonHang instance);
    partial void UpdateCTDonHang(CTDonHang instance);
    partial void DeleteCTDonHang(CTDonHang instance);
    partial void InsertDonDatHangg(DonDatHangg instance);
    partial void UpdateDonDatHangg(DonDatHangg instance);
    partial void DeleteDonDatHangg(DonDatHangg instance);
    partial void InsertHangSanXuat(HangSanXuat instance);
    partial void UpdateHangSanXuat(HangSanXuat instance);
    partial void DeleteHangSanXuat(HangSanXuat instance);
    partial void InsertKinh(Kinh instance);
    partial void UpdateKinh(Kinh instance);
    partial void DeleteKinh(Kinh instance);
    partial void InsertLoaiKinh(LoaiKinh instance);
    partial void UpdateLoaiKinh(LoaiKinh instance);
    partial void DeleteLoaiKinh(LoaiKinh instance);
    partial void InsertLoaiPhuKien(LoaiPhuKien instance);
    partial void UpdateLoaiPhuKien(LoaiPhuKien instance);
    partial void DeleteLoaiPhuKien(LoaiPhuKien instance);
    partial void InsertPhuKien(PhuKien instance);
    partial void UpdatePhuKien(PhuKien instance);
    partial void DeletePhuKien(PhuKien instance);
    #endregion
		
		public WebBanKinhDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["WebBanKinh1ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public WebBanKinhDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WebBanKinhDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WebBanKinhDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WebBanKinhDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<TTKhachHang> TTKhachHangs
		{
			get
			{
				return this.GetTable<TTKhachHang>();
			}
		}
		
		public System.Data.Linq.Table<CTDonHang> CTDonHangs
		{
			get
			{
				return this.GetTable<CTDonHang>();
			}
		}
		
		public System.Data.Linq.Table<DonDatHangg> DonDatHanggs
		{
			get
			{
				return this.GetTable<DonDatHangg>();
			}
		}
		
		public System.Data.Linq.Table<HangSanXuat> HangSanXuats
		{
			get
			{
				return this.GetTable<HangSanXuat>();
			}
		}
		
		public System.Data.Linq.Table<Kinh> Kinhs
		{
			get
			{
				return this.GetTable<Kinh>();
			}
		}
		
		public System.Data.Linq.Table<LoaiKinh> LoaiKinhs
		{
			get
			{
				return this.GetTable<LoaiKinh>();
			}
		}
		
		public System.Data.Linq.Table<LoaiPhuKien> LoaiPhuKiens
		{
			get
			{
				return this.GetTable<LoaiPhuKien>();
			}
		}
		
		public System.Data.Linq.Table<PhuKien> PhuKiens
		{
			get
			{
				return this.GetTable<PhuKien>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TK;
		
		private string _MK;
		
		private string _HoTenAD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTKChanging(string value);
    partial void OnTKChanged();
    partial void OnMKChanging(string value);
    partial void OnMKChanged();
    partial void OnHoTenADChanging(string value);
    partial void OnHoTenADChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TK", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TK
		{
			get
			{
				return this._TK;
			}
			set
			{
				if ((this._TK != value))
				{
					this.OnTKChanging(value);
					this.SendPropertyChanging();
					this._TK = value;
					this.SendPropertyChanged("TK");
					this.OnTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MK", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MK
		{
			get
			{
				return this._MK;
			}
			set
			{
				if ((this._MK != value))
				{
					this.OnMKChanging(value);
					this.SendPropertyChanging();
					this._MK = value;
					this.SendPropertyChanged("MK");
					this.OnMKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenAD", DbType="NVarChar(50)")]
		public string HoTenAD
		{
			get
			{
				return this._HoTenAD;
			}
			set
			{
				if ((this._HoTenAD != value))
				{
					this.OnHoTenADChanging(value);
					this.SendPropertyChanging();
					this._HoTenAD = value;
					this.SendPropertyChanged("HoTenAD");
					this.OnHoTenADChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TTKhachHang")]
	public partial class TTKhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKH;
		
		private string _HoTen;
		
		private string _TaiKhoan;
		
		private string _MatKhau;
		
		private string _Email;
		
		private string _DienThoaiKH;
		
		private string _DiaChiKH;
		
		private EntitySet<DonDatHangg> _DonDatHanggs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDienThoaiKHChanging(string value);
    partial void OnDienThoaiKHChanged();
    partial void OnDiaChiKHChanging(string value);
    partial void OnDiaChiKHChanged();
    #endregion
		
		public TTKhachHang()
		{
			this._DonDatHanggs = new EntitySet<DonDatHangg>(new Action<DonDatHangg>(this.attach_DonDatHanggs), new Action<DonDatHangg>(this.detach_DonDatHanggs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="VarChar(50)")]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoaiKH", DbType="VarChar(50)")]
		public string DienThoaiKH
		{
			get
			{
				return this._DienThoaiKH;
			}
			set
			{
				if ((this._DienThoaiKH != value))
				{
					this.OnDienThoaiKHChanging(value);
					this.SendPropertyChanging();
					this._DienThoaiKH = value;
					this.SendPropertyChanged("DienThoaiKH");
					this.OnDienThoaiKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiKH", DbType="NVarChar(MAX)")]
		public string DiaChiKH
		{
			get
			{
				return this._DiaChiKH;
			}
			set
			{
				if ((this._DiaChiKH != value))
				{
					this.OnDiaChiKHChanging(value);
					this.SendPropertyChanging();
					this._DiaChiKH = value;
					this.SendPropertyChanged("DiaChiKH");
					this.OnDiaChiKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TTKhachHang_DonDatHangg", Storage="_DonDatHanggs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<DonDatHangg> DonDatHanggs
		{
			get
			{
				return this._DonDatHanggs;
			}
			set
			{
				this._DonDatHanggs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DonDatHanggs(DonDatHangg entity)
		{
			this.SendPropertyChanging();
			entity.TTKhachHang = this;
		}
		
		private void detach_DonDatHanggs(DonDatHangg entity)
		{
			this.SendPropertyChanging();
			entity.TTKhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTDonHang")]
	public partial class CTDonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDH;
		
		private int _MaKinh;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<decimal> _DonGia;
		
		private EntityRef<DonDatHangg> _DonDatHangg;
		
		private EntityRef<Kinh> _Kinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDHChanging(int value);
    partial void OnMaDHChanged();
    partial void OnMaKinhChanging(int value);
    partial void OnMaKinhChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(System.Nullable<decimal> value);
    partial void OnDonGiaChanged();
    #endregion
		
		public CTDonHang()
		{
			this._DonDatHangg = default(EntityRef<DonDatHangg>);
			this._Kinh = default(EntityRef<Kinh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					if (this._DonDatHangg.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKinh", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaKinh
		{
			get
			{
				return this._MaKinh;
			}
			set
			{
				if ((this._MaKinh != value))
				{
					if (this._Kinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKinhChanging(value);
					this.SendPropertyChanging();
					this._MaKinh = value;
					this.SendPropertyChanged("MaKinh");
					this.OnMaKinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDatHangg_CTDonHang", Storage="_DonDatHangg", ThisKey="MaDH", OtherKey="MaDH", IsForeignKey=true)]
		public DonDatHangg DonDatHangg
		{
			get
			{
				return this._DonDatHangg.Entity;
			}
			set
			{
				DonDatHangg previousValue = this._DonDatHangg.Entity;
				if (((previousValue != value) 
							|| (this._DonDatHangg.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonDatHangg.Entity = null;
						previousValue.CTDonHangs.Remove(this);
					}
					this._DonDatHangg.Entity = value;
					if ((value != null))
					{
						value.CTDonHangs.Add(this);
						this._MaDH = value.MaDH;
					}
					else
					{
						this._MaDH = default(int);
					}
					this.SendPropertyChanged("DonDatHangg");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kinh_CTDonHang", Storage="_Kinh", ThisKey="MaKinh", OtherKey="MaKinh", IsForeignKey=true)]
		public Kinh Kinh
		{
			get
			{
				return this._Kinh.Entity;
			}
			set
			{
				Kinh previousValue = this._Kinh.Entity;
				if (((previousValue != value) 
							|| (this._Kinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kinh.Entity = null;
						previousValue.CTDonHangs.Remove(this);
					}
					this._Kinh.Entity = value;
					if ((value != null))
					{
						value.CTDonHangs.Add(this);
						this._MaKinh = value.MaKinh;
					}
					else
					{
						this._MaKinh = default(int);
					}
					this.SendPropertyChanged("Kinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonDatHangg")]
	public partial class DonDatHangg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDH;
		
		private int _MaKH;
		
		private string _HoTen;
		
		private System.Nullable<System.DateTime> _NgayDH;
		
		private string _NgayGiao;
		
		private string _SDTKH;
		
		private string _Email;
		
		private string _DiaChi;
		
		private EntitySet<CTDonHang> _CTDonHangs;
		
		private EntityRef<TTKhachHang> _TTKhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDHChanging(int value);
    partial void OnMaDHChanged();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnNgayDHChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayDHChanged();
    partial void OnNgayGiaoChanging(string value);
    partial void OnNgayGiaoChanged();
    partial void OnSDTKHChanging(string value);
    partial void OnSDTKHChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public DonDatHangg()
		{
			this._CTDonHangs = new EntitySet<CTDonHang>(new Action<CTDonHang>(this.attach_CTDonHangs), new Action<CTDonHang>(this.detach_CTDonHangs));
			this._TTKhachHang = default(EntityRef<TTKhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int NOT NULL")]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._TTKhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(200)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDH", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayDH
		{
			get
			{
				return this._NgayDH;
			}
			set
			{
				if ((this._NgayDH != value))
				{
					this.OnNgayDHChanging(value);
					this.SendPropertyChanging();
					this._NgayDH = value;
					this.SendPropertyChanged("NgayDH");
					this.OnNgayDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGiao", DbType="NVarChar(200)")]
		public string NgayGiao
		{
			get
			{
				return this._NgayGiao;
			}
			set
			{
				if ((this._NgayGiao != value))
				{
					this.OnNgayGiaoChanging(value);
					this.SendPropertyChanging();
					this._NgayGiao = value;
					this.SendPropertyChanged("NgayGiao");
					this.OnNgayGiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDTKH", DbType="VarChar(50)")]
		public string SDTKH
		{
			get
			{
				return this._SDTKH;
			}
			set
			{
				if ((this._SDTKH != value))
				{
					this.OnSDTKHChanging(value);
					this.SendPropertyChanging();
					this._SDTKH = value;
					this.SendPropertyChanged("SDTKH");
					this.OnSDTKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(200)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(200)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDatHangg_CTDonHang", Storage="_CTDonHangs", ThisKey="MaDH", OtherKey="MaDH")]
		public EntitySet<CTDonHang> CTDonHangs
		{
			get
			{
				return this._CTDonHangs;
			}
			set
			{
				this._CTDonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TTKhachHang_DonDatHangg", Storage="_TTKhachHang", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public TTKhachHang TTKhachHang
		{
			get
			{
				return this._TTKhachHang.Entity;
			}
			set
			{
				TTKhachHang previousValue = this._TTKhachHang.Entity;
				if (((previousValue != value) 
							|| (this._TTKhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TTKhachHang.Entity = null;
						previousValue.DonDatHanggs.Remove(this);
					}
					this._TTKhachHang.Entity = value;
					if ((value != null))
					{
						value.DonDatHanggs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(int);
					}
					this.SendPropertyChanged("TTKhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTDonHangs(CTDonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonDatHangg = this;
		}
		
		private void detach_CTDonHangs(CTDonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonDatHangg = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HangSanXuat")]
	public partial class HangSanXuat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHSX;
		
		private string _TenHSX;
		
		private string _DiaChiHSX;
		
		private string _DienThoaiHSX;
		
		private EntitySet<Kinh> _Kinhs;
		
		private EntitySet<PhuKien> _PhuKiens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHSXChanging(int value);
    partial void OnMaHSXChanged();
    partial void OnTenHSXChanging(string value);
    partial void OnTenHSXChanged();
    partial void OnDiaChiHSXChanging(string value);
    partial void OnDiaChiHSXChanged();
    partial void OnDienThoaiHSXChanging(string value);
    partial void OnDienThoaiHSXChanged();
    #endregion
		
		public HangSanXuat()
		{
			this._Kinhs = new EntitySet<Kinh>(new Action<Kinh>(this.attach_Kinhs), new Action<Kinh>(this.detach_Kinhs));
			this._PhuKiens = new EntitySet<PhuKien>(new Action<PhuKien>(this.attach_PhuKiens), new Action<PhuKien>(this.detach_PhuKiens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHSX", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHSX
		{
			get
			{
				return this._MaHSX;
			}
			set
			{
				if ((this._MaHSX != value))
				{
					this.OnMaHSXChanging(value);
					this.SendPropertyChanging();
					this._MaHSX = value;
					this.SendPropertyChanged("MaHSX");
					this.OnMaHSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHSX", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenHSX
		{
			get
			{
				return this._TenHSX;
			}
			set
			{
				if ((this._TenHSX != value))
				{
					this.OnTenHSXChanging(value);
					this.SendPropertyChanging();
					this._TenHSX = value;
					this.SendPropertyChanged("TenHSX");
					this.OnTenHSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiHSX", DbType="NVarChar(200)")]
		public string DiaChiHSX
		{
			get
			{
				return this._DiaChiHSX;
			}
			set
			{
				if ((this._DiaChiHSX != value))
				{
					this.OnDiaChiHSXChanging(value);
					this.SendPropertyChanging();
					this._DiaChiHSX = value;
					this.SendPropertyChanged("DiaChiHSX");
					this.OnDiaChiHSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoaiHSX", DbType="NVarChar(50)")]
		public string DienThoaiHSX
		{
			get
			{
				return this._DienThoaiHSX;
			}
			set
			{
				if ((this._DienThoaiHSX != value))
				{
					this.OnDienThoaiHSXChanging(value);
					this.SendPropertyChanging();
					this._DienThoaiHSX = value;
					this.SendPropertyChanged("DienThoaiHSX");
					this.OnDienThoaiHSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangSanXuat_Kinh", Storage="_Kinhs", ThisKey="MaHSX", OtherKey="MaHSX")]
		public EntitySet<Kinh> Kinhs
		{
			get
			{
				return this._Kinhs;
			}
			set
			{
				this._Kinhs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangSanXuat_PhuKien", Storage="_PhuKiens", ThisKey="MaHSX", OtherKey="MaHSX")]
		public EntitySet<PhuKien> PhuKiens
		{
			get
			{
				return this._PhuKiens;
			}
			set
			{
				this._PhuKiens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kinhs(Kinh entity)
		{
			this.SendPropertyChanging();
			entity.HangSanXuat = this;
		}
		
		private void detach_Kinhs(Kinh entity)
		{
			this.SendPropertyChanging();
			entity.HangSanXuat = null;
		}
		
		private void attach_PhuKiens(PhuKien entity)
		{
			this.SendPropertyChanging();
			entity.HangSanXuat = this;
		}
		
		private void detach_PhuKiens(PhuKien entity)
		{
			this.SendPropertyChanging();
			entity.HangSanXuat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kinh")]
	public partial class Kinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKinh;
		
		private System.Nullable<int> _MaLoai;
		
		private System.Nullable<int> _MaHSX;
		
		private string _TenKinh;
		
		private System.Nullable<decimal> _GiaBan;
		
		private string _MoTa;
		
		private string _AnhBia;
		
		private System.Nullable<System.DateTime> _NgayCapNhat;
		
		private System.Nullable<int> _SoLuongTon;
		
		private EntitySet<CTDonHang> _CTDonHangs;
		
		private EntityRef<HangSanXuat> _HangSanXuat;
		
		private EntityRef<LoaiKinh> _LoaiKinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKinhChanging(int value);
    partial void OnMaKinhChanged();
    partial void OnMaLoaiChanging(System.Nullable<int> value);
    partial void OnMaLoaiChanged();
    partial void OnMaHSXChanging(System.Nullable<int> value);
    partial void OnMaHSXChanged();
    partial void OnTenKinhChanging(string value);
    partial void OnTenKinhChanged();
    partial void OnGiaBanChanging(System.Nullable<decimal> value);
    partial void OnGiaBanChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnAnhBiaChanging(string value);
    partial void OnAnhBiaChanged();
    partial void OnNgayCapNhatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapNhatChanged();
    partial void OnSoLuongTonChanging(System.Nullable<int> value);
    partial void OnSoLuongTonChanged();
    #endregion
		
		public Kinh()
		{
			this._CTDonHangs = new EntitySet<CTDonHang>(new Action<CTDonHang>(this.attach_CTDonHangs), new Action<CTDonHang>(this.detach_CTDonHangs));
			this._HangSanXuat = default(EntityRef<HangSanXuat>);
			this._LoaiKinh = default(EntityRef<LoaiKinh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKinh", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKinh
		{
			get
			{
				return this._MaKinh;
			}
			set
			{
				if ((this._MaKinh != value))
				{
					this.OnMaKinhChanging(value);
					this.SendPropertyChanging();
					this._MaKinh = value;
					this.SendPropertyChanged("MaKinh");
					this.OnMaKinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="Int")]
		public System.Nullable<int> MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					if (this._LoaiKinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHSX", DbType="Int")]
		public System.Nullable<int> MaHSX
		{
			get
			{
				return this._MaHSX;
			}
			set
			{
				if ((this._MaHSX != value))
				{
					if (this._HangSanXuat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHSXChanging(value);
					this.SendPropertyChanging();
					this._MaHSX = value;
					this.SendPropertyChanged("MaHSX");
					this.OnMaHSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKinh", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenKinh
		{
			get
			{
				return this._TenKinh;
			}
			set
			{
				if ((this._TenKinh != value))
				{
					this.OnTenKinhChanging(value);
					this.SendPropertyChanging();
					this._TenKinh = value;
					this.SendPropertyChanged("TenKinh");
					this.OnTenKinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBan", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> GiaBan
		{
			get
			{
				return this._GiaBan;
			}
			set
			{
				if ((this._GiaBan != value))
				{
					this.OnGiaBanChanging(value);
					this.SendPropertyChanging();
					this._GiaBan = value;
					this.SendPropertyChanged("GiaBan");
					this.OnGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(MAX)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhBia", DbType="VarChar(50)")]
		public string AnhBia
		{
			get
			{
				return this._AnhBia;
			}
			set
			{
				if ((this._AnhBia != value))
				{
					this.OnAnhBiaChanging(value);
					this.SendPropertyChanging();
					this._AnhBia = value;
					this.SendPropertyChanged("AnhBia");
					this.OnAnhBiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCapNhat", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayCapNhat
		{
			get
			{
				return this._NgayCapNhat;
			}
			set
			{
				if ((this._NgayCapNhat != value))
				{
					this.OnNgayCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NgayCapNhat = value;
					this.SendPropertyChanged("NgayCapNhat");
					this.OnNgayCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongTon", DbType="Int")]
		public System.Nullable<int> SoLuongTon
		{
			get
			{
				return this._SoLuongTon;
			}
			set
			{
				if ((this._SoLuongTon != value))
				{
					this.OnSoLuongTonChanging(value);
					this.SendPropertyChanging();
					this._SoLuongTon = value;
					this.SendPropertyChanged("SoLuongTon");
					this.OnSoLuongTonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kinh_CTDonHang", Storage="_CTDonHangs", ThisKey="MaKinh", OtherKey="MaKinh")]
		public EntitySet<CTDonHang> CTDonHangs
		{
			get
			{
				return this._CTDonHangs;
			}
			set
			{
				this._CTDonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangSanXuat_Kinh", Storage="_HangSanXuat", ThisKey="MaHSX", OtherKey="MaHSX", IsForeignKey=true)]
		public HangSanXuat HangSanXuat
		{
			get
			{
				return this._HangSanXuat.Entity;
			}
			set
			{
				HangSanXuat previousValue = this._HangSanXuat.Entity;
				if (((previousValue != value) 
							|| (this._HangSanXuat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HangSanXuat.Entity = null;
						previousValue.Kinhs.Remove(this);
					}
					this._HangSanXuat.Entity = value;
					if ((value != null))
					{
						value.Kinhs.Add(this);
						this._MaHSX = value.MaHSX;
					}
					else
					{
						this._MaHSX = default(Nullable<int>);
					}
					this.SendPropertyChanged("HangSanXuat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiKinh_Kinh", Storage="_LoaiKinh", ThisKey="MaLoai", OtherKey="MaLoai", IsForeignKey=true)]
		public LoaiKinh LoaiKinh
		{
			get
			{
				return this._LoaiKinh.Entity;
			}
			set
			{
				LoaiKinh previousValue = this._LoaiKinh.Entity;
				if (((previousValue != value) 
							|| (this._LoaiKinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiKinh.Entity = null;
						previousValue.Kinhs.Remove(this);
					}
					this._LoaiKinh.Entity = value;
					if ((value != null))
					{
						value.Kinhs.Add(this);
						this._MaLoai = value.MaLoai;
					}
					else
					{
						this._MaLoai = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiKinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTDonHangs(CTDonHang entity)
		{
			this.SendPropertyChanging();
			entity.Kinh = this;
		}
		
		private void detach_CTDonHangs(CTDonHang entity)
		{
			this.SendPropertyChanging();
			entity.Kinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiKinh")]
	public partial class LoaiKinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoai;
		
		private string _TenLoaiKinh;
		
		private EntitySet<Kinh> _Kinhs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(int value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiKinhChanging(string value);
    partial void OnTenLoaiKinhChanged();
    #endregion
		
		public LoaiKinh()
		{
			this._Kinhs = new EntitySet<Kinh>(new Action<Kinh>(this.attach_Kinhs), new Action<Kinh>(this.detach_Kinhs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiKinh", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLoaiKinh
		{
			get
			{
				return this._TenLoaiKinh;
			}
			set
			{
				if ((this._TenLoaiKinh != value))
				{
					this.OnTenLoaiKinhChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiKinh = value;
					this.SendPropertyChanged("TenLoaiKinh");
					this.OnTenLoaiKinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiKinh_Kinh", Storage="_Kinhs", ThisKey="MaLoai", OtherKey="MaLoai")]
		public EntitySet<Kinh> Kinhs
		{
			get
			{
				return this._Kinhs;
			}
			set
			{
				this._Kinhs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Kinhs(Kinh entity)
		{
			this.SendPropertyChanging();
			entity.LoaiKinh = this;
		}
		
		private void detach_Kinhs(Kinh entity)
		{
			this.SendPropertyChanging();
			entity.LoaiKinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiPhuKien")]
	public partial class LoaiPhuKien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLPK;
		
		private string _TenLoaiPhuKien;
		
		private EntitySet<PhuKien> _PhuKiens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLPKChanging(int value);
    partial void OnMaLPKChanged();
    partial void OnTenLoaiPhuKienChanging(string value);
    partial void OnTenLoaiPhuKienChanged();
    #endregion
		
		public LoaiPhuKien()
		{
			this._PhuKiens = new EntitySet<PhuKien>(new Action<PhuKien>(this.attach_PhuKiens), new Action<PhuKien>(this.detach_PhuKiens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLPK", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLPK
		{
			get
			{
				return this._MaLPK;
			}
			set
			{
				if ((this._MaLPK != value))
				{
					this.OnMaLPKChanging(value);
					this.SendPropertyChanging();
					this._MaLPK = value;
					this.SendPropertyChanged("MaLPK");
					this.OnMaLPKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiPhuKien", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string TenLoaiPhuKien
		{
			get
			{
				return this._TenLoaiPhuKien;
			}
			set
			{
				if ((this._TenLoaiPhuKien != value))
				{
					this.OnTenLoaiPhuKienChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiPhuKien = value;
					this.SendPropertyChanged("TenLoaiPhuKien");
					this.OnTenLoaiPhuKienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiPhuKien_PhuKien", Storage="_PhuKiens", ThisKey="MaLPK", OtherKey="MaLPK")]
		public EntitySet<PhuKien> PhuKiens
		{
			get
			{
				return this._PhuKiens;
			}
			set
			{
				this._PhuKiens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhuKiens(PhuKien entity)
		{
			this.SendPropertyChanging();
			entity.LoaiPhuKien = this;
		}
		
		private void detach_PhuKiens(PhuKien entity)
		{
			this.SendPropertyChanging();
			entity.LoaiPhuKien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhuKien")]
	public partial class PhuKien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPK;
		
		private System.Nullable<int> _MaLPK;
		
		private System.Nullable<int> _MaHSX;
		
		private string _TenPhuKien;
		
		private System.Nullable<decimal> _GiaBanPK;
		
		private string _MoTaPK;
		
		private string _AnhBiaPK;
		
		private System.Nullable<System.DateTime> _NgayCapNhat;
		
		private System.Nullable<int> _SoLuongPK;
		
		private EntityRef<HangSanXuat> _HangSanXuat;
		
		private EntityRef<LoaiPhuKien> _LoaiPhuKien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPKChanging(int value);
    partial void OnMaPKChanged();
    partial void OnMaLPKChanging(System.Nullable<int> value);
    partial void OnMaLPKChanged();
    partial void OnMaHSXChanging(System.Nullable<int> value);
    partial void OnMaHSXChanged();
    partial void OnTenPhuKienChanging(string value);
    partial void OnTenPhuKienChanged();
    partial void OnGiaBanPKChanging(System.Nullable<decimal> value);
    partial void OnGiaBanPKChanged();
    partial void OnMoTaPKChanging(string value);
    partial void OnMoTaPKChanged();
    partial void OnAnhBiaPKChanging(string value);
    partial void OnAnhBiaPKChanged();
    partial void OnNgayCapNhatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapNhatChanged();
    partial void OnSoLuongPKChanging(System.Nullable<int> value);
    partial void OnSoLuongPKChanged();
    #endregion
		
		public PhuKien()
		{
			this._HangSanXuat = default(EntityRef<HangSanXuat>);
			this._LoaiPhuKien = default(EntityRef<LoaiPhuKien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPK", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPK
		{
			get
			{
				return this._MaPK;
			}
			set
			{
				if ((this._MaPK != value))
				{
					this.OnMaPKChanging(value);
					this.SendPropertyChanging();
					this._MaPK = value;
					this.SendPropertyChanged("MaPK");
					this.OnMaPKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLPK", DbType="Int")]
		public System.Nullable<int> MaLPK
		{
			get
			{
				return this._MaLPK;
			}
			set
			{
				if ((this._MaLPK != value))
				{
					if (this._LoaiPhuKien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLPKChanging(value);
					this.SendPropertyChanging();
					this._MaLPK = value;
					this.SendPropertyChanged("MaLPK");
					this.OnMaLPKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHSX", DbType="Int")]
		public System.Nullable<int> MaHSX
		{
			get
			{
				return this._MaHSX;
			}
			set
			{
				if ((this._MaHSX != value))
				{
					if (this._HangSanXuat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHSXChanging(value);
					this.SendPropertyChanging();
					this._MaHSX = value;
					this.SendPropertyChanged("MaHSX");
					this.OnMaHSXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhuKien", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenPhuKien
		{
			get
			{
				return this._TenPhuKien;
			}
			set
			{
				if ((this._TenPhuKien != value))
				{
					this.OnTenPhuKienChanging(value);
					this.SendPropertyChanging();
					this._TenPhuKien = value;
					this.SendPropertyChanged("TenPhuKien");
					this.OnTenPhuKienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBanPK", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> GiaBanPK
		{
			get
			{
				return this._GiaBanPK;
			}
			set
			{
				if ((this._GiaBanPK != value))
				{
					this.OnGiaBanPKChanging(value);
					this.SendPropertyChanging();
					this._GiaBanPK = value;
					this.SendPropertyChanged("GiaBanPK");
					this.OnGiaBanPKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTaPK", DbType="NVarChar(MAX)")]
		public string MoTaPK
		{
			get
			{
				return this._MoTaPK;
			}
			set
			{
				if ((this._MoTaPK != value))
				{
					this.OnMoTaPKChanging(value);
					this.SendPropertyChanging();
					this._MoTaPK = value;
					this.SendPropertyChanged("MoTaPK");
					this.OnMoTaPKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhBiaPK", DbType="VarChar(50)")]
		public string AnhBiaPK
		{
			get
			{
				return this._AnhBiaPK;
			}
			set
			{
				if ((this._AnhBiaPK != value))
				{
					this.OnAnhBiaPKChanging(value);
					this.SendPropertyChanging();
					this._AnhBiaPK = value;
					this.SendPropertyChanged("AnhBiaPK");
					this.OnAnhBiaPKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCapNhat", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayCapNhat
		{
			get
			{
				return this._NgayCapNhat;
			}
			set
			{
				if ((this._NgayCapNhat != value))
				{
					this.OnNgayCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NgayCapNhat = value;
					this.SendPropertyChanged("NgayCapNhat");
					this.OnNgayCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongPK", DbType="Int")]
		public System.Nullable<int> SoLuongPK
		{
			get
			{
				return this._SoLuongPK;
			}
			set
			{
				if ((this._SoLuongPK != value))
				{
					this.OnSoLuongPKChanging(value);
					this.SendPropertyChanging();
					this._SoLuongPK = value;
					this.SendPropertyChanged("SoLuongPK");
					this.OnSoLuongPKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangSanXuat_PhuKien", Storage="_HangSanXuat", ThisKey="MaHSX", OtherKey="MaHSX", IsForeignKey=true)]
		public HangSanXuat HangSanXuat
		{
			get
			{
				return this._HangSanXuat.Entity;
			}
			set
			{
				HangSanXuat previousValue = this._HangSanXuat.Entity;
				if (((previousValue != value) 
							|| (this._HangSanXuat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HangSanXuat.Entity = null;
						previousValue.PhuKiens.Remove(this);
					}
					this._HangSanXuat.Entity = value;
					if ((value != null))
					{
						value.PhuKiens.Add(this);
						this._MaHSX = value.MaHSX;
					}
					else
					{
						this._MaHSX = default(Nullable<int>);
					}
					this.SendPropertyChanged("HangSanXuat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiPhuKien_PhuKien", Storage="_LoaiPhuKien", ThisKey="MaLPK", OtherKey="MaLPK", IsForeignKey=true)]
		public LoaiPhuKien LoaiPhuKien
		{
			get
			{
				return this._LoaiPhuKien.Entity;
			}
			set
			{
				LoaiPhuKien previousValue = this._LoaiPhuKien.Entity;
				if (((previousValue != value) 
							|| (this._LoaiPhuKien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiPhuKien.Entity = null;
						previousValue.PhuKiens.Remove(this);
					}
					this._LoaiPhuKien.Entity = value;
					if ((value != null))
					{
						value.PhuKiens.Add(this);
						this._MaLPK = value.MaLPK;
					}
					else
					{
						this._MaLPK = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiPhuKien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
